{"name":"Sjobq","tagline":"Simple Bash Job Queue","body":"SJobQ is a very simple queue system written in Bourne shell for managing serial jobs that run in local form on one machine only. In some situations is important to let that a set of jobs run in series without human supervision. This allow you to exploit the computing resources available on your machine, in order to keep the machine working all the time. The principal problem is that the available queue systems are a bit complicated to install or simply you need to be root to install them and you don't have those permissions. SJobQ is the solution, because, you don't need to be root and in order to install it you only need download three files and go !, you can begin to work. \r\n\r\n### INSTALLING\r\n```\r\n$ svn checkout http://sjobq.googlecode.com/svn/trunk/ sjobq-read-only\r\nA    sjobq-read-only/sjobq.d\r\nA    sjobq-read-only/sjobq.del\r\nA    sjobq-read-only/sjobq.stat\r\nA    sjobq-read-only/sjobq.push\r\nChecked out revision 3.\r\n\r\n$ ls sjobq-read-only/\r\nsjobq.d  sjobq.del  sjobq.push  sjobq.stat\r\n\r\n$ cp sjobq-read-only/* $HOME/bin/\r\n```\r\n\r\n### DEMON STARTUP\r\n```\r\n$ sjobq.d start\r\n```\r\n\r\n### PUTTING JOBS IN THE QUEUE\r\nTo put jobs into queue, use the command sjob.queue before its statement. Its important to point out you have to use the character \\ if you are going to use special bash characters like !,$,#.\r\n\r\n```\r\n$ sjobq.push sleep 30s\r\nid      = 1\r\ncommand = sleep 30s\r\ndir     = /home/nestor/Downloads\r\n\r\n$ sjobq.push echo \\\"Hola\\\"\r\nid      = 2\r\ncommand = echo \"Hola\"\r\ndir     = /home/nestor/Downloads\r\n\r\n$ sjobq.push find /etc/ -name \\\"\\*.conf\\\" \\> output \\; sleep 30\r\nid      = 3\r\ncommand = find /etc/ -name \"*.conf\" > output\r\ndir     = /home/nestor/Downloads\r\n```\r\n\r\n### CHECKING JOBS STATUS\r\nThe command sjobq.stat will show the jobs which are running, queued and finished. \r\n\r\n```\r\n$ sjobq.stat\r\n-------------\r\n Current job\r\n-------------\r\npid          = 5644\r\ncommand      = sleep 30s\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 3s\r\npids         = 5644 \r\ntree         =\r\n        sleep(5644)\r\n\r\n-----------\r\n Job queue\r\n-----------\r\nid      = 2\r\ncommand = echo \"Hola\"\r\ndir     = /home/nestor/Downloads\r\n\r\nid      = 3\r\ncommand = find /etc/ -name \"*.conf\" > output ; sleep 30\r\ndir     = /home/nestor/Downloads\r\n\r\n---------\r\n History\r\n---------\r\n```\r\nafter 2 minutes ...\r\n```\r\n$ sjobq.stat\r\n---------\r\n History\r\n---------\r\ncommand      = sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n\r\ncommand      = echo \"Hola\"\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 4s\r\n\r\ncommand      = find /etc/ -name \"*.conf\" > output ; sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n```\r\n\r\n### DELETING JOBS\r\nImagine that you put the following commands in the queue \r\n```\r\n$ sjobq.push sleep 1h\r\nid      = 4\r\ncommand = sleep 1h\r\ndir     = /home/nestor/Downloads\r\n\r\n$ sjobq.push sleep 2h\r\nid      = 5\r\ncommand = sleep 1h\r\ndir     = /home/nestor/Downloads\r\n\r\n$ sjobq.push sleep 3h\r\nid      = 6\r\ncommand = sleep 1h\r\ndir     = /home/nestor/Downloads\r\n\r\n$ sjobq.stat\r\n-------------\r\n Current job\r\n-------------\r\npid          = 27378\r\ncommand      = sleep 1h\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 13s\r\npids         = 27378 \r\ntree         =\r\n        sleep(27378)\r\n\r\n-----------\r\n Job queue\r\n-----------\r\nid      = 5\r\ncommand = sleep 2h\r\ndir     = /home/nestor/Downloads\r\n\r\nid      = 6\r\ncommand = sleep 3h\r\ndir     = /home/nestor/Downloads\r\n\r\n---------\r\n History\r\n---------\r\ncommand      = sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n\r\ncommand      = echo \"Hola\"\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 4s\r\n\r\ncommand      = find /etc/ -name \"*.conf\" > output ; sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n```\r\nYou can delete a queued job by using its identifier (id). The id is provided in the output of the sqjob.stat command. \r\n```\r\n$ sjobq.del 6\r\nJob with id=6 has been deleted !!\r\n\r\n$ sjobq.stat\r\n-------------\r\n Current job\r\n-------------\r\npid          = 27378\r\ncommand      = sleep 1h\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 13s\r\npids         = 27378 \r\ntree         =\r\n        sleep(27378)\r\n\r\n-----------\r\n Job queue\r\n-----------\r\nid      = 5\r\ncommand = sleep 2h\r\ndir     = /home/nestor/Downloads\r\n\r\n---------\r\n History\r\n---------\r\ncommand      = sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n\r\ncommand      = echo \"Hola\"\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 4s\r\n\r\ncommand      = find /etc/ -name \"*.conf\" > output ; sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n```\r\nAlso it is possible to delete the running job by using the identifier \"current\". \r\n```\r\n$ sjobq.del current\r\nJob with id=current has been deleted !!\r\n\r\n$ sjobq.stat\r\n-------------\r\n Current job\r\n-------------\r\npid          = 28465\r\ncommand      = sleep 2h\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 1m 6s\r\npids         = 28465 \r\ntree         =\r\n        sleep(28465)\r\n\r\n---------\r\n History\r\n---------\r\ncommand      = sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n\r\ncommand      = echo \"Hola\"\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 4s\r\n\r\ncommand      = find /etc/ -name \"*.conf\" > output ; sleep 30\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 0m 31s\r\n\r\ncommand      = sleep 1h\r\ndir          = /home/nestor/Downloads\r\ntime spent   = 0h 5m 8s\r\n```\r\n### DAEMON SHUTDOWN\r\n```\r\n$ sjobq.d stop\r\n```\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at https://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"UA-22447949-7","note":"Don't delete this file! It's used internally to help with page regeneration."}